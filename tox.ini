[tox]
envlist =
    py37
    py38
    py39
    py310
    py311
    coverage

skip_missing_interpreters = True

[testenv]
setenv =
    VIRTUALENV_NO_DOWNLOAD=1
    COVERAGE_FILE=.coverage.{envname}
deps =
    -r {toxinidir}/requirements-tests.txt
    -r {toxinidir}/requirements-lint.txt
commands =
    flake8 {toxinidir}/src {toxinidir}/tests
    mypy {toxinidir}/src {toxinidir}/tests
    pytest --showlocals --cov=statsd --cov-report= --no-cov-on-fail --junit-xml junit.{envname}.xml {envsitepackagesdir}/statsd {toxinidir}/tests

[testenv:coverage]
deps = coverage
skipsdist = true
skip_install = true
basepython = python3.10
allowlist_externals = bash
depends =
    py36
    py37
    py38
    py39
    py310
commands =
    bash -c '{envpython} -m coverage combine .coverage.py*'
    coverage report
    coverage html
    coverage xml

[testenv:fmt]
skip_install = true
skipsdist = true
basepython = python3.10
deps = -r {toxinidir}/requirements-fmt.txt
commands =
    black --config black.toml src tests
    isort src tests

[testenv:clean]
skip_install = true
skipsdist = true
deps =
basepython = python3.10
allowlist_externals =
    find
    rm
commands =
    find src tests -type f -name "*.pyc" -delete
    find src tests -type f -name "*.pyo" -delete
    find src tests -type f -name "*.pyd" -delete
    find src tests -type d -name "__pycache__" -delete
    find src tests -type f -name "*.c" -delete
    find src tests -type f -name "*.so" -delete
    find . src tests -type f -path "*.egg-info*" -delete
    rm -rf .pytest_cache
    rm -rf .mypy_cache
    find . -type f -path "junit*.xml" -delete
    rm -rf htmlcov
    find . -type f -path "coverage*.xml" -delete
    find . -type f -path ".coverage*" -delete
    find . -type f -path "flake8.*" -delete
    rm -rf dist build docs/build

[testenv:build]
skip_install = true
skipsdist = true
basepython = python3.10
deps = -r requirements-build.txt
depends =
    clean
commands =
    python setup.py sdist bdist_wheel

[testenv:upload]
skip_install = true
skipsdist = true
basepython = python3.10
deps = -r requirements-build.txt
depends =
    build
commands =
    twine check dist/*
    twine upload dist/*

[testenv:docs]
basepython = python3.10
deps = -r requirements-docs.txt
allowlist_externals =
    rm
commands =
    rm -rf docs/build
    sphinx-build -v -W -b html docs/source docs/build
